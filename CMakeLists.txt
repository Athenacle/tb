
CMAKE_MINIMUM_REQUIRED(VERSION 3.0)

PROJECT(taobao)
SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_SOURCE_DIR}/cmake)
SET(TB_INCLUDE_ROOT ${CMAKE_SOURCE_DIR}/include/)

INCLUDE_DIRECTORIES(${TB_INCLUDE_ROOT})

SET(CMAKE_CXX_STANDARD 14)
SET(PROJECT_VERSION 0.0.0)
STRING(TIMESTAMP TB_BUILD_TIME "%Y-%m-%d %H:%M:%SZ")
SET(USE_POSIX_THREAD 1)
#SET(USE_CXX_THREAD 1)

SET(CMAKE_EXPORT_COMPILE_COMMANDS ON)

SET(PROJECT_BUILD_PATH ${CMAKE_SOURCE_DIR})

INCLUDE(CompilerOptionCheck)
INCLUDE(ConfigCheck)


### dependencies start

INCLUDE(RapidJSON)

FIND_PACKAGE(Boost 1.60 COMPONENTS thread )
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})
STRING(CONCAT TB_BOOST_VERSION ${Boost_MAJOR_VERSION} "." ${Boost_MINOR_VERSION} "." ${Boost_SUBMINOR_VERSION})

SET(${sys} ${Boost_THREAD_LIBRARIES})

SET(BOOST_VERSION ${TB_BOOST_VERSION})

FIND_PACKAGE(Threads REQUIRED)

INCLUDE(FindZLIB)
FIND_PACKAGE(ZLIB)
IF (${ZLIB_FOUND})
  INCLUDE_DIRECTORIES(${ZLIB_INCLUDE_DIRS})
  SET(ZLIB_VERSION ${ZLIB_VERSION_STRING})
  SET(USE_ZLIB 1)
ENDIF()


# configure file.
CONFIGURE_FILE(${TB_INCLUDE_ROOT}/config.h.in
  ${TB_INCLUDE_ROOT}/config.h)
ADD_DEFINITIONS(-DHAVE_CONFIG_H)

##dependencies end

AUX_SOURCE_DIRECTORY(${CMAKE_SOURCE_DIR}/lib TB_SOURCE_LIST)

AUX_SOURCE_DIRECTORY(${CMAKE_SOURCE_DIR}/filechecker FC_LIST)


ADD_LIBRARY(tb STATIC ${TB_SOURCE_LIST})
ADD_EXECUTABLE(fchecker ${FC_LIST})
ADD_DEPENDENCIES(tb RapidJSON)
ADD_DEPENDENCIES(fchecker tb)

TARGET_LINK_LIBRARIES(fchecker tb pthread ${Boost_LIBRARIES})
## tests

INCLUDE(Gtest)

AUX_SOURCE_DIRECTORY(${CMAKE_SOURCE_DIR}/test/json TB_TEST_SOURCE_LIST)
ADD_EXECUTABLE(tbTest ${TB_TEST_SOURCE_LIST}
  ${CMAKE_SOURCE_DIR}/test/main.cpp)
ADD_DEPENDENCIES(tbTest gtest)
ADD_EXECUTABLE(log_test ${CMAKE_SOURCE_DIR}/test/utils/log_test.cpp)

INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/test)


TARGET_LINK_LIBRARIES(tbTest libgtest tb ${Boost_LIBRARIES})
TARGET_LINK_LIBRARIES(log_test tb pthread ${Boost_LIBRARIES})
